openapi: 3.0.0
info:
  version: 0.0.1
  title: Policy API
  description: API to manage policy flow.
paths:
  /policy/v1:
    post:
      tags:
        - Policy
      summary: Create Policy
      requestBody:
        description: Policy details
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreatePolicy'
      responses:
        '200':
          description: Policy created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PolicyId'
        '404':
          description: Policy creation failed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              example:
                code: "404"
                message: "Policy could not be created"
                data: "Long descriptive message"
                type: "Application error"
                path: "/policy/v1"
        '500':
          description: Policy could not be created due to unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              example:
                code: "500"
                message: "Error processing request {specific error log from exception/error}"
                data: "Additional error message/logs"
                type: "System error"
                path: "/policy/v1"
    put:
      tags:
        - Policy
      summary: Update Policy Status
      requestBody:
        description: Policy status details
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdatePolicyStatus'
      responses:
        '200':
          description: Policy status updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PolicyId'
        '404':
          description: Policy status update failed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              example:
                code: "404"
                message: "Policy status could not be updated"
                data: "Long descriptive message"
                type: "Application error"
                path: "/policy/v1"
        '500':
          description: Policy status could not be updated due to unexpected error
          content: 
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              example:
                code: "500"
                message: "Error processing request {specific error log from exception/error}"
                data: "Additional error message/logs"
                type: "System error"
                path: "/policy/v1"
  /policy/v1/{domain}/{type}/{county}/{city}/{status}:
    get:
      tags:
        - Policy
      summary: Get Policies 
      parameters:
        - name: domain
          description: Policy domain
          in: path
          required: true
          schema:
            type: string
          examples:
            Domain Name:
              value:
                "mobility"
            All domains:
              value:
                "all"
        - name: type
          description: Policy type
          in: path
          required: true
          schema:
            type: string
          examples:
            Specific policy type:
              value:
                "GeofencePolicy"
            All policy types:
              value:
                "all"
        - name: county
          description: Policy county
          in: path
          required: true
          schema:
            type: string
          examples:
            Specific country:
              value:
                "IND"
            All countries:
              value:
                "all"
        - name: city
          description: Policy city
          in: path
          required: true
          schema:
            type: string
          examples:
            Specific city:
              value:
                "std:080"
            All cities:
              value:
                "all"
        - name: status
          description: Policy status
          in: path
          required: true
          schema:
            type: string
          examples:
            Specific status:
              value:
                "published"
            All policies:
              value:
                "all"
      responses:
        '200':
          description: Requested policies retrieved
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PoliciesMetaData'
        '404':
          description: Requested policies could not be retrieved
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              example:
                code: "404"
                message: "Requested policies could not be retrieved"
                data: "Long descriptive message"
                type: "Application error"
                path: "/policy/v1/{domain}/{type}/{county}/{city}/{status}"
        '500':
          description: Requestd policies could not be retrieved due to unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              example:
                code: "500"
                message: "Error processing request {specific error log from exception/error}"
                data: "Additional error message/logs"
                type: "System error"
                path: "/policy/v1/{domain}/{type}/{county}/{city}/{status}"
  /policy/v1/{policyId}:
    get:
      tags:
        - Policy
      summary: Get Policy Details 
      parameters:
        - name: policyId
          description: Policy Id
          in: path
          required: true
          schema:
            type: string
          example:
            "123456"
      responses:
        '200':
          description: Policy details retrieved
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PolicyDetails'
        '404':
          description: Policy details could not be retrieved
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              example:
                code: "404"
                message: "Policy details could not be retrieved"
                data: "Long descriptive message"
                type: "Application error"
                path: "/policy/v1/{policyId}"
        '500':
          description: Policy details could not be retrieved due to unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              example:
                code: "500"
                message: "Error processing request {specific error log from exception/error}"
                data: "Additional error message/logs"
                type: "System error"
                path: "/policy/v1/{policyId}"
components:
  schemas:
    Policy:
      description: Schema for Policy object
      type: object
      required:
        - domain
        - type
        - country
        - city
        - name
        - description
        - owner
        - startDate
        - endDate
        - applicableTo
        - polygon
      properties:
        domain:
          description: Domain to implement policy
          type: string
        type:
          description: Policy type
          type: string
        country:
          description: Policy applied to country
          type: string
        city:
          description: Policy applied to city
          type: string
        name:
          description: Policy name
          type: string
        description:
          description: Policy description
          type: string
        owner:
          description: Policy name
          type: string
        contactEmail:
          description: Policy owner contact email
          type: string
        policyDocuments:
          description: Policy name
          type: string
        startDate:
          description: Policy start date
          type: string
        endDate:
          description: Policy end date
          type: string
        applicableTo:
          description: Policy applicable to
          type: array
          items:
            type: string
        polygon:
          description: Policy polygon to apply policy
          type: array
          items:
            type: string
        rules:
          description: Policy rules json
          type: object
    PolicyId:
      description: Policy id
      type: string
      required:
        - id
      properties:
        id:
          type: string
          description: policy id stored in database
    PolicyStatus:
      description: Policy status
      type: string
      required:
        - status
      properties:
        status:
          type: string
          description: policy status stored in database
          enum:
            - active
            - inactive
            - published
    CreatePolicy:
      description: Schema for Policy creation
      type: object
      required:
        - domain
        - type
        - country
        - city
        - name
        - description
        - owner
        - startDate
        - endDate
        - applicableTo
        - polygon
        - status
      allOf:  
        - $ref: '#/components/schemas/Policy'
        - $ref: '#/components/schemas/PolicyStatus'
      properties:
        createdBy:
          description: Policy creator id/email
          type: string
    UpdatePolicyStatus:
      description: Schema for Policy status update
      type: object
      required:
        - policyId
        - status
      properties:
        policyId:
          description: Policy id
          type: string
        status:
          description: Policy status
          type: string
        modifiedBy:
          description: Policy status modifier id/email
          type: string
    PoliciesMetaData:
      description: Schema for Policy metadata (List policies)
      type: object
      required:
        - id
        - status
        - name
        - description
        - startDate
        - endDate
      allOf:  
        - $ref: '#/components/schemas/PolicyId'
        - $ref: '#/components/schemas/PolicyStatus'
      properties:
        name:
          description: Policy name
          type: string
        description:
          description: Policy description
          type: string
        startDate:
          description: Policy start date
          type: string
        endDate:
          description: Policy end date
          type: string
    PolicyDetails:
      description: Schema for Policy details
      type: object
      required:
        - id
        - status
        - domain
        - type
        - country
        - city
        - name
        - description
        - owner
        - startDate
        - endDate
        - applicableTo
        - polygon
      allOf:  
        - $ref: '#/components/schemas/PolicyId'
        - $ref: '#/components/schemas/PolicyStatus'
        - $ref: '#/components/schemas/Policy'
      properties:
        createdBy:
          description: Policy creator id/email
          type: string
        createdAt:
          description: Policy creation timestamp
          type: string
        latModifiedBy:
          description: Policy modifier id/email
          type: string
        lastModifiedAt:
          description: Policy updation timestamp
          type: string
    Context:
      description: Policy schema context object
      type: object
      required:
        - action
        - domain
        - country
        - city
        - version
      properties:
        action:
          type: string
        domain:
          type: string
        country:
          type: string
        city:
          type: string
        version:
          type: string
    Error:
      type: object
      required:
        - type
        - code
        - message
        - path
      properties:
        code:
          description: Policy specific error code
          type: string
        message:
          description: Human readable error message from databse/API
          type: string
        data:
          description: Additional error data
          type: object
        type:
          description: Error type
          type: string
        path:
          description: Path to json schema generating the error. Used only during json schema validation errors
          type: string
  securitySchemes:
    ApiKey:
      type: apiKey
      in: header
      name: X-Api-Key
security:
  - ApiKey: []
servers:
  - url: https://api.policy.becknprotocol.io
    variables: {}
 